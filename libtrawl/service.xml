<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.freedesktop.DBus.Peer">
    <method name="Ping">
    </method>
    <method name="GetMachineId">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.regolith.trawl1">
    <!--
     DBus Interface to load resources from file
     -->
    <method name="Load">
      <arg name="path" type="s" direction="in"/>
      <arg name="nocpp" type="b" direction="in"/>
    </method>
    <!--
     DBus Interface to merge resources from file
     -->
    <method name="Merge">
      <arg name="path" type="s" direction="in"/>
      <arg name="nocpp" type="b" direction="in"/>
    </method>
    <!--
     DBus Interface to load resources from file using custom preprocessor
     -->
    <method name="LoadCpp">
      <arg name="path" type="s" direction="in"/>
      <arg name="cpp" type="s" direction="in"/>
      <arg name="args" type="s" direction="in"/>
    </method>
    <!--
     DBus Interface to merge resources from file using custom preprocessor
     -->
    <method name="MergeCpp">
      <arg name="path" type="s" direction="in"/>
      <arg name="cpp" type="s" direction="in"/>
      <arg name="args" type="s" direction="in"/>
    </method>
    <!--
     Returns all the matching
     *Note*: Also a DBus interface
     -->
    <method name="Query">
      <arg name="q" type="s" direction="in"/>
      <arg type="s" direction="out"/>
    </method>
    <!--
     Get the resource value
     -->
    <method name="GetResource">
      <arg name="key" type="s" direction="in"/>
      <arg type="s" direction="out"/>
    </method>
    <!--
     DBus interface to set the value of a resource. Overwrites exiting value.
     TODO: Separate implementation to make more testable
     # Emits
     **resources_changed**: This signal indicated the change
     in'resources' property value
     -->
    <method name="SetResource">
      <arg name="key" type="s" direction="in"/>
      <arg name="val" type="s" direction="in"/>
    </method>
    <!--
     DBus interface to add a new resource. Doesn't overwrite exiting
     values in case of conflicts
     TODO: Separate implementation to make more testable
     -->
    <method name="AddResource">
      <arg name="key" type="s" direction="in"/>
      <arg name="val" type="s" direction="in"/>
    </method>
    <!--
     Dbus interface to remove all entries from config manager
     -->
    <method name="RemoveAll">
    </method>
    <!--
     Dbus interface to remove single entry from config manager
     -->
    <method name="RemoveOne">
      <arg name="key" type="s" direction="in"/>
    </method>
    <!--
     DBus interface for getting resources values
     -->
    <property name="Resources" type="a{ss}" access="read"/>
  </interface>
  <interface name="org.freedesktop.DBus.Introspectable">
    <method name="Introspect">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.freedesktop.DBus.Properties">
    <method name="Get">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg type="v" direction="out"/>
    </method>
    <method name="Set">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg name="value" type="v" direction="in"/>
    </method>
    <method name="GetAll">
      <arg name="interface_name" type="s" direction="in"/>
      <arg type="a{sv}" direction="out"/>
    </method>
    <!--
     Emits the `org.freedesktop.DBus.Properties.PropertiesChanged` signal.
     -->
    <signal name="PropertiesChanged">
      <arg name="interface_name" type="s"/>
      <arg name="changed_properties" type="a{sv}"/>
      <arg name="invalidated_properties" type="as"/>
    </signal>
  </interface>
</node>
